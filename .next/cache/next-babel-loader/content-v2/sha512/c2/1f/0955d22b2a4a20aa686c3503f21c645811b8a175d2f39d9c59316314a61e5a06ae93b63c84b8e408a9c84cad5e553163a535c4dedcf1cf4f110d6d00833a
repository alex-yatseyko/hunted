{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Shared/Relocated Items/Security/Work/Web/NextTest/next-test/components/Review.tsx\",\n    _this = this;\n\n// import glassdor from '../assets/img/glassdor.svg'\n// import sourcr from '../assets/img/sourcr.svg'\n// import trustpilot from '../assets/img/trustpilot.svg'\n// const logos = {\n//     glassdor: 'glassdor',\n//     sourcr: 'rourcr',\n//     trustpilot: 'trustpilot'\n// }\n// const Review:React.FC<ReviewProps> = ({ name, reviews, stars, url, data}) => {\nvar Review = function Review(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    target: \"_blank\",\n    href: data.url,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.name, /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.stars && data.reviews ? \"\".concat(data === null || data === void 0 ? void 0 : data.stars, \" from \").concat(data === null || data === void 0 ? void 0 : data.reviews, \" reviews\") : 'No reviews'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = Review;\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Review\");","map":{"version":3,"sources":["/Users/Shared/Relocated Items/Security/Work/Web/NextTest/next-test/components/Review.tsx"],"names":["Review","data"],"mappings":";;;;;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAMA,MAA4B,GAAG,SAA/BA,MAA+B,CAAA,IAAA,EAAc;AAAA,MAAXC,IAAW,GAAA,IAAA,CAAXA,IAAW;AAC/C,SAAA,aACI,OAAA,CAAA,GAAA,EAAA;AAAG,IAAA,MAAM,EAAT,QAAA;AAAmB,IAAA,IAAI,EAAEA,IAAI,CAA7B,GAAA;AAAA,IAAA,QAAA,EAAA,aACI,OAAA,CAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,CAGKA,IAAI,CAHT,IAAA,EAAA,aAII,OAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAC;AAAb,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAJJ,KAII,CAJJ,EAAA,aAKI,OAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAC;AAAb,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EALJ,KAKI,CALJ,EAAA,aAMI,OAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAC;AAAb,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EANJ,KAMI,CANJ,EAAA,aAOI,OAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAS,EAAC;AAAb,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAPJ,KAOI,CAPJ,EAAA,aAQI,OAAA,CAAA,GAAA,EAAA;AAAA,QAAA,QAAA,EAAIA,IAAI,CAAJA,KAAAA,IAAcA,IAAI,CAAlBA,OAAAA,GAAAA,GAAAA,MAAAA,CAAgCA,IAAhCA,KAAAA,IAAgCA,IAAAA,IAAhCA,KAAAA,KAAAA,CAAgCA,GAAhCA,KAAAA,CAAgCA,GAAAA,IAAI,CAApCA,KAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAoDA,IAApDA,KAAAA,IAAoDA,IAAAA,IAApDA,KAAAA,KAAAA,CAAoDA,GAApDA,KAAAA,CAAoDA,GAAAA,IAAI,CAAxDA,OAAAA,EAAAA,UAAAA,CAAAA,GAA8E;AAAlF,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EARJ,KAQI,CARJ;AAAA,KAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAAA,KAAA;AADJ,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADJ,KACI,CADJ;AADJ,CAAA;;MAAMD,M;KAAAA,M;AAkBN,eAAA,MAAA","sourcesContent":["import React from 'react'\n// import glassdor from '../assets/img/glassdor.svg'\n// import sourcr from '../assets/img/sourcr.svg'\n// import trustpilot from '../assets/img/trustpilot.svg'\n\ntype ReviewProps = {\n    // id: number,\n    // name: string,\n    // reviews: number,\n    // stars: number,\n    // url: string,\n    key: React.Key,\n    data: {\n        id: number,\n        name: string,\n        reviews: number,\n        stars: number,\n        url: string,\n    }\n}\n\n// const logos = {\n//     glassdor: 'glassdor',\n//     sourcr: 'rourcr',\n//     trustpilot: 'trustpilot'\n// }\n\n// const Review:React.FC<ReviewProps> = ({ name, reviews, stars, url, data}) => {\nconst Review:React.FC<ReviewProps> = ({ data }) => {\n    return (\n        <a target=\"_blank\" href={data.url}>\n            <div>\n                {/* <img src={logos.name} /> */}\n                {/* {name} */}\n                {data.name}\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <p>{data.stars && data.reviews ? `${data?.stars} from ${data?.reviews} reviews` : 'No reviews'}</p>\n                {/* <p>{data.name}</p> */}\n            </div>\n        </a>\n    )\n}\n\nexport default Review\n"]},"metadata":{},"sourceType":"module"}