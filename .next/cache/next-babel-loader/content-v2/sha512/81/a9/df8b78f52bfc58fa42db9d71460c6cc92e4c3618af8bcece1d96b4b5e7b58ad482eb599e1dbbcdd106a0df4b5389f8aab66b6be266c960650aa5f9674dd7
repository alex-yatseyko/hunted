{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Shared/Relocated Items/Security/Work/Web/NextTest/next-test/components/Review.tsx\",\n    _this = this;\n\n// import glassdor from '../assets/img/glassdor.svg'\n// import sourcr from '../assets/img/sourcr.svg'\n// import trustpilot from '../assets/img/trustpilot.svg'\nvar logos = {\n  glassdor: 'glassdor',\n  sourcr: 'rourcr',\n  trustpilot: 'trustpilot'\n};\n\nvar Review = function Review(_ref) {\n  var name = _ref.name,\n      reviews = _ref.reviews,\n      stars = _ref.stars,\n      url = _ref.url,\n      data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    target: \"_blank\",\n    href: url,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logos.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), name, /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-star\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stars && reviews ? \"\".concat(stars, \" from \").concat(reviews) : 'No reviews'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = Review;\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Review\");","map":{"version":3,"sources":["/Users/Shared/Relocated Items/Security/Work/Web/NextTest/next-test/components/Review.tsx"],"names":["logos","glassdor","sourcr","trustpilot","Review","name","reviews","stars","url","data"],"mappings":"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","sourcesContent":["import React from 'react'\n// import glassdor from '../assets/img/glassdor.svg'\n// import sourcr from '../assets/img/sourcr.svg'\n// import trustpilot from '../assets/img/trustpilot.svg'\n\ntype ReviewProps = {\n    id: number,\n    name: string,\n    reviews: number,\n    stars: number,\n    url: string,\n    data: object\n}\n\nconst logos = {\n    glassdor: 'glassdor',\n    sourcr: 'rourcr',\n    trustpilot: 'trustpilot'\n}\n\nconst Review:React.FC<ReviewProps> = ({ name, reviews, stars, url, data}) => {\n    return (\n        <a target=\"_blank\" href={url}>\n            <div>\n                <img src={logos.name} />\n                {name}\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <i className=\"fas fa-star\"></i>\n                <p>{stars && reviews ? `${stars} from ${reviews}` : 'No reviews'}</p>\n            </div>\n        </a>\n    )\n}\n\nexport default Review\n"]},"metadata":{},"sourceType":"module"}